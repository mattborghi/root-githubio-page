[{"/home/borghi/Desktop/github.io/root-page/src/index.js":"1","/home/borghi/Desktop/github.io/root-page/src/App.js":"2","/home/borghi/Desktop/github.io/root-page/src/serviceWorker.js":"3","/home/borghi/Desktop/github.io/root-page/src/Data.js":"4","/home/borghi/Desktop/github.io/root-page/src/components/Header.js":"5"},{"size":503,"mtime":1596715277217,"results":"6","hashOfConfig":"7"},{"size":245,"mtime":1596766606179,"results":"8","hashOfConfig":"7"},{"size":5086,"mtime":1590430109018,"results":"9","hashOfConfig":"7"},{"size":643,"mtime":1597719943293,"results":"10","hashOfConfig":"7"},{"size":2952,"mtime":1611186683153,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1lbqm3c",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/borghi/Desktop/github.io/root-page/src/index.js",[],["24","25"],"/home/borghi/Desktop/github.io/root-page/src/App.js",[],"/home/borghi/Desktop/github.io/root-page/src/serviceWorker.js",[],"/home/borghi/Desktop/github.io/root-page/src/Data.js",[],"/home/borghi/Desktop/github.io/root-page/src/components/Header.js",["26"],"import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nexport default function Header(props) {\n  const [alert, setAlert] = useState(false);\n  const { resumeData } = props;\n\n  return (\n    <React.Fragment>\n      <header id=\"home\">\n        <nav id=\"nav-wrap\">\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a href=\"#home\" alt=\"home\">\n                Home\n              </a>\n            </li>\n            <li>\n              <a href=\"https://mattborghi.github.io/CV\" alt=\"cv\">\n                CV\n              </a>\n            </li>\n            <li>\n              <a href=\"https://mattborghi.github.io/myblog\" alt=\"myblog\">\n                Blog\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://mattborghi.github.io/projects\"\n                alt=\"projects\"\n                // onClick={() => setAlert((alert) => !alert)}\n              >\n                Projects\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://mattborghi.github.io/francais\"\n                alt=\"The French Blog\"\n              >\n                French\n              </a>\n            </li>\n            <li>\n              <a href=\"https://mattborghi.github.io/violin\" alt=\"violin\">\n                Violin\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <h2 className=\"responsive-headline\"> Hello, my name is </h2>\n            <h1 className=\"responsive-headline\"> {resumeData.name}.</h1>\n            <h3 style={{ color: \"#fff\", fontFamily: \"sans-serif \" }}>\n              I am a {resumeData.role}. {resumeData.roleDescription}\n            </h3>\n            <hr />\n            <ul className=\"social\">\n              {resumeData.socialLinks &&\n                resumeData.socialLinks.map((item) => {\n                  return (\n                    <li key={item.name}>\n                      <a\n                        href={item.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <i className={item.className}></i>\n                      </a>\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        </div>\n      </header>\n\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        open={alert}\n        onClose={() => setAlert((alert) => !alert)}\n        message=\"Page not yet implemented!\"\n        key=\"snackbar\"\n        autoHideDuration={5000}\n      />\n    </React.Fragment>\n  );\n  // }\n}\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":15,"column":11,"nodeType":"33","endLine":15,"endColumn":70},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]